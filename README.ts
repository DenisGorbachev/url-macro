#!/usr/bin/env -S deno run --allow-read --allow-run=bash,git,cargo --allow-env --allow-sys

import * as zx from 'npm:zx'

interface CargoToml {
  package: {
    name: string,
    description: string,
    metadata: {
      details: {
        title: string,
        tagline: string,
        summary: string
      }
    }
  }
}

interface Repo {
  url: string
}

const $ = zx.$({ cwd: import.meta.dirname })
const parse = (input: { toString: () => string }) => JSON.parse(input.toString())

const theCargoToml: CargoToml = parse(await $`yj -t < Cargo.toml`)
const { package: {name, description, metadata: {details: {title}}} } = theCargoToml
const bin = name
const repo: Repo = parse(await $`gh repo view --json url`)

const autogenerated = `
<!-- DO NOT EDIT -->
<!-- This file is automatically generated by README.ts. -->
<!-- Edit README.ts if you want to make changes. -->
`.trim()

console.info(`
${autogenerated}

# ${title}

[![Build](${repo.url}/actions/workflows/ci.yml/badge.svg)](${repo.url})
[![Documentation](https://docs.rs/${name}/badge.svg)](https://docs.rs/${name})

## Overview

${description}

## Examples

\`\`\`rust
let google = url!("https://www.google.com/");

let invalid_url = url!("foo");
                  ^^^^^
                  Triggers a compiler error
\`\`\`

## Installation

\`\`\`shell
cargo add ${name} url
\`\`\`

**Important:** add the \`url\` crate too.

## License

[Apache License 2.0](LICENSE-APACHE) or [MIT License](LICENSE-MIT) at your option.

Unless you explicitly state otherwise, any contribution intentionally submitted for inclusion in this crate by you, as defined in the Apache-2.0 license, shall be dual licensed as above, without any additional terms or conditions.
`.trim())
